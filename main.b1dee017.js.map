{"version":3,"sources":["scripts/main.js"],"names":["element","document","querySelectorAll","map","item","insertAdjacentHTML","getLabel","className","htmlFor","el","lastChild","firstElementChild","id","textContent","name","placeholder","toUpperCase","slice"],"mappings":";AAAA,aAwBC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EApBD,IAAMA,EAAUC,SAASC,iBAAiB,UAE1C,EAAIF,GAASG,IAAI,SAAAC,GAAQA,OAAAA,EAAKC,mBAAmB,YAAa,aAE9D,IAAMC,EAAWL,SAASC,iBAAiB,SAE3C,EAAII,GAAUH,IAAI,SAAAC,GAChBA,EAAKG,UAAY,cACjBH,EAAKI,QAAU,KAGAR,IAShB,EATgBA,EAAAA,EAAAA,GAShB,IATyB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAfS,IAAAA,EAAe,EAAA,MACpBA,EAAGC,YACLD,EAAGC,UAAUF,QAAUC,EAAGE,kBAAkBC,GAC5CH,EAAGC,UAAUG,YAAcJ,EAAGE,kBAAkBG,MAGlDL,EAAGE,kBAAkBI,YACnB,GAAGN,OAAAA,EAAGE,kBAAkBG,MAAO,GAAGE,cAClC,GAAGP,OAAAA,EAAGE,kBAAkBG,MAAOG,MAAM,IACxC,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA","file":"main.b1dee017.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write code here\n\nconst element = document.querySelectorAll('.field');\n\n[...element].map(item => item.insertAdjacentHTML('beforeend', '<label>'));\n\nconst getLabel = document.querySelectorAll('label');\n\n[...getLabel].map(item => {\n  item.className = 'field-label';\n  item.htmlFor = '';\n});\n\nfor (const el of element) {\n  if (el.lastChild) {\n    el.lastChild.htmlFor = el.firstElementChild.id;\n    el.lastChild.textContent = el.firstElementChild.name;\n  }\n\n  el.firstElementChild.placeholder\n  = `${el.firstElementChild.name}`[0].toUpperCase()\n  + `${el.firstElementChild.name}`.slice(1);\n}\n"]}